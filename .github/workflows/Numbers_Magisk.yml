name: Numbersf_Magisk
on:
  workflow_dispatch:
    inputs:
      CPU:
        type: choice
        description: "分支"
        required: true
        default: sm8650
        options:
          - sm8650
      FEIL:
        type: choice
        description: "配置文件"
        required: true
        default: oneplus12_v
        options:
          - oneplus12_v
          - GitHub有bug可能不显示最后一项,误使用此项
      CPUD:
        type: choice
        description: "处理器代号"
        required: true
        default: pineapple
        options:
          - pineapple
      ANDROID_VERSION:
        type: choice
        description: "内核安卓版本"
        required: true
        default: android14
        options:
          - android14
      KERNEL_VERSION:
       type: choice
       description: "内核版本"
       required: true
       default: "6.1"
       options:
         - "6.1"
      BUILD_METHOD:
        type: choice
        description: "编译方式"
        required: true
        default: gki
        options:
          - gki

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          swap-size-mb: 8192
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'

      - name: Configure Git
        run: |
          git config --global user.name "Numbersf"
          git config --global user.email "263623064@qq.com"

      - name: Install dependencies
        run: |
          sudo apt update && sudo apt upgrade -y
          sudo apt install -y python3 git curl

      - name: Show selected inputs debug
        run: |
          echo "Selected CPU: ${{ github.event.inputs.CPU }}"
          echo "Selected FEIL: ${{ github.event.inputs.FEIL }}"
          echo "Selected CPUD: ${{ github.event.inputs.CPUD }}"
          echo "Selected ANDROID_VERSION: ${{ github.event.inputs.ANDROID_VERSION }}"
          echo "Selected KERNEL_VERSION: ${{ github.event.inputs.KERNEL_VERSION }}"
          echo "Selected BUILD_METHOD: ${{ github.event.inputs.BUILD_METHOD }}"
          echo "Selected SUSFS_CI: ${{ github.event.inputs.SUSFS_CI }}"
          echo "Selected ZRAM: ${{ github.event.inputs.ZRAM }}"
          echo "Selected VFS: ${{ github.event.inputs.VFS }}"
          echo "Selected KPM: ${{ github.event.inputs.KPM }}"

      - name: Install repo tool
        run: |
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
          chmod a+x ~/repo
          sudo mv ~/repo /usr/local/bin/repo

      - name: Initialize repo and sync
        run: |
          mkdir kernel_workspace && cd kernel_workspace
          repo init -u https://github.com/OnePlusOSS/kernel_manifest.git -b refs/heads/oneplus/${{ github.event.inputs.CPU }} -m ${{ github.event.inputs.FEIL }}.xml --depth=1
          repo sync
          if [  -e kernel_platform/common/BUILD.bazel ]; then
          sed -i '/^[[:space:]]*"protected_exports_list"[[:space:]]*:[[:space:]]*"android\/abi_gki_protected_exports_aarch64",$/d' kernel_platform/common/BUILD.bazel
          fi
          if [  -e kernel_platform/msm-kernel/BUILD.bazel ]; then
          sed -i '/^[[:space:]]*"protected_exports_list"[[:space:]]*:[[:space:]]*"android\/abi_gki_protected_exports_aarch64",$/d' kernel_platform/msm-kernel/BUILD.bazel
          fi
          rm kernel_platform/common/android/abi_gki_protected_exports_* || echo "No protected exports!"
          rm kernel_platform/msm-kernel/android/abi_gki_protected_exports_* || echo "No protected exports!"

      # 删除 -dirty 后缀
      - name: Force remove -dirty suffix
        run: |
          cd kernel_workspace/kernel_platform
          sed -i 's/ -dirty//g' common/scripts/setlocalversion
          sed -i 's/ -dirty//g' msm-kernel/scripts/setlocalversion
          sed -i 's/ -dirty//g' external/dtc/scripts/setlocalversion
          sed -i '$i res=$(echo "$res" | sed '\''s/-dirty//g'\'')' common/scripts/setlocalversion
          git add -A
          git commit -m "Force remove -dirty suffix from kernel version"

      # 配置信息
      - name: Add Configuration Settings
        run: |
          cd kernel_workspace/kernel_platform
          CONFIG_FILE=./common/arch/arm64/configs/gki_defconfig
          KERNEL_VERSION="${{ github.event.inputs.KERNEL_VERSION }}"

          # Remove check_defconfig
          sed -i 's/check_defconfig//' ./common/build.config.gki

      - name: Build kernel
        if: ${{ github.event.inputs.CPU == 'sm8650' || github.event.inputs.CPU == 'sm7675' }}
        run: |
          cd kernel_workspace
          ./kernel_platform/build_with_bazel.py -t ${{ github.event.inputs.CPUD }} ${{ github.event.inputs.BUILD_METHOD }}
          
      - name: Fallback build kernel
        if: ${{ github.event.inputs.CPU != 'sm8650' && github.event.inputs.CPU != 'sm7675' }}
        run: |
         cd kernel_workspace
         LTO=thin SYSTEM_DLKM_RE_SIGN=0 BUILD_SYSTEM_DLKM=0 KMI_SYMBOL_LIST_STRICT_MODE=0 ./kernel_platform/oplus/build/oplus_build_kernel.sh ${{ github.event.inputs.CPUD }} ${{ github.event.inputs.BUILD_METHOD }}

      - name: Make AnyKernel3
        run: |
          git clone https://github.com/Xiaomichael/AnyKernel3 --depth=1
          rm -rf ./AnyKernel3/.git

          dir1="kernel_workspace/kernel_platform/out/msm-kernel-${{ github.event.inputs.CPUD }}-${{ github.event.inputs.BUILD_METHOD }}/dist/"
          dir2="kernel_workspace/kernel_platform/bazel-out/k8-fastbuild/bin/msm-kernel/${{ github.event.inputs.CPUD }}_gki_kbuild_mixed_tree/"
          dir3="kernel_workspace/kernel_platform/out/msm-${{ github.event.inputs.CPUD }}-${{ github.event.inputs.CPUD }}-${{ github.event.inputs.BUILD_METHOD }}/dist/"
          dir4="kernel_workspace/kernel_platform/out/msm-kernel-${{ github.event.inputs.CPUD }}-${{ github.event.inputs.BUILD_METHOD }}/gki_kernel/common/arch/arm64/boot/"
          dir5="kernel_workspace/kernel_platform/out/msm-${{ github.event.inputs.CPUD }}-${{ github.event.inputs.CPUD }}-${{ github.event.inputs.BUILD_METHOD }}/gki_kernel/common/arch/arm64/boot/"
          target1="./AnyKernel3/"
          target2="./kernel_workspace/kernel"

          # 查找 Image 文件
          if find "$dir1" -name "Image" | grep -q "Image"; then
            image_path="$dir1"Image
          elif find "$dir2" -name "Image" | grep -q "Image"; then
            image_path="$dir2"Image
          elif find "$dir3" -name "Image" | grep -q "Image"; then
            image_path="$dir3"Image
          elif find "$dir4" -name "Image" | grep -q "Image"; then
            image_path="$dir4"Image
          elif find "$dir5" -name "Image" | grep -q "Image"; then
            image_path="$dir5"Image
          else
            image_path=$(find "./kernel_workspace/kernel_platform/common/out/" -name "Image" | head -n 1)
          fi

          # 拷贝 Image
          if [ -n "$image_path" ] && [ -f "$image_path" ]; then
            mkdir -p "$dir1"
            if [ "$(realpath "$image_path")" != "$(realpath "$dir1"Image)" ]; then
              cp "$image_path" "$dir1"
            else
              echo "源文件与目标相同，跳过复制"
            fi
            cp "$dir1"Image ./AnyKernel3/Image
          else
            echo "未找到 Image 文件，构建可能失败"
            exit 1
          fi

          # 可选复制其它新文件（如果存在）
          if [ "${{ github.event.inputs.CPU }}" = "sm8750" ]; then
          for file in dtbo.img system_dlkm.erofs.img vendor_dlkm.img vendor_boot.img; do
            if [ -f "$dir1$file" ]; then
              target_name="$file"
              # 特殊处理 system_dlkm.erofs.img 的目标名
              if [ "$file" = "system_dlkm.erofs.img" ]; then
                target_name="system_dlkm.img"
              fi
              cp "$dir1$file" "./AnyKernel3/$target_name"
            else
              echo "$file 不存在，跳过复制"
            fi
          done
          fi

      - name: Set suffix
        id: suffix
        run: |
          echo "value=${{ github.event.inputs.KPM == 'true' && '_KPM' || '' }}${{ github.event.inputs.VFS == 'true' && '_VFS' || '' }}${{ github.event.inputs.ZRAM == 'true' && '_LZ4KD_ZSTDN' || '' }}" >> $GITHUB_OUTPUT

      - name: Remove _uv suffix from FEIL
        id: feil_clean
        run: |
          clean_feil="${{ github.event.inputs.FEIL }}"
          clean_feil="${clean_feil%_v}"  # 去掉结尾的 _v（如果有）
          clean_feil="${clean_feil%_u}"  # 去掉结尾的 _u（如果有）
          echo "value=$clean_feil" >> $GITHUB_OUTPUT

      - name: Upload AnyKernel3
        uses: actions/upload-artifact@v4
        with:
          name: AnyKernel3_SukiSUUltra_${{ env.KSUVER }}_${{ steps.feil_clean.outputs.value }}${{ steps.suffix.outputs.value }}
          path: ./AnyKernel3/*
