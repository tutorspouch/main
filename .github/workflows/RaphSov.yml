name: RaphSov

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      KBUILD_BUILD_USER: NATO66613
      KBUILD_BUILD_HOST: KREMLIN
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          create-symlink: true
          key: kernel-build-cache
          restore-keys: |
            kernel-build-cache

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y bc bison build-essential ccache curl flex libelf-dev libncurses-dev libssl-dev unzip zip wget libarchive-tools
          
          ccache --show-stats

      - name: Deploy Clang with AntMan
        run: |
          mkdir -p $HOME/neutron-clang
          cd $HOME/neutron-clang
          curl -LO "https://raw.githubusercontent.com/Neutron-Toolchains/antman/main/antman"
          chmod +x antman
          ./antman -S
          ./antman --patch=glibc
        shell: bash

      - name: Build the kernel with `ccache`
        run: |
          export CLANG_PATH=$HOME/neutron-clang/bin
          export PATH=${CLANG_PATH}:${PATH}
          
          # Use ccache explicitly
          make LLVM=1 LLVM_IAS=1 CC="ccache clang" raphael_defconfig
          make LLVM=1 LLVM_IAS=1 CC="ccache clang" -j$(grep -c ^processor /proc/cpuinfo)

          # Show ccache stats after build
          ccache --show-stats
          ccache --show-config
        shell: bash

      - name: Repack Kernel Artifacts
        run: |
          git clone --depth=1 https://github.com/SOVIET-ANDROID/AnyKernel3.git $HOME/AnyKernel3
          cp out/arch/arm64/boot/Image.gz-dtb $HOME/AnyKernel3/
          cp out/arch/arm64/boot/dtbo.img $HOME/AnyKernel3/

          # Determine branch name and commit hash (first 6 characters)
          BRANCH=$(echo "${GITHUB_REF#refs/heads/}" | sed 's|/|-|g')
          COMMIT_HASH=$(echo "$GITHUB_SHA" | cut -c1-6)
          ZIP_NAME="${BRANCH}-${COMMIT_HASH}.zip"
          echo $ZIP_NAME

          # Export ZIP_NAME for later steps
          echo "ZIP_NAME=${ZIP_NAME}" >> $GITHUB_ENV

          # Move entire AnyKernel3 directory to workspace
          mv "$HOME/AnyKernel3" "$GITHUB_WORKSPACE/AnyKernel3"

          # Verify contents of AnyKernel3 in workspace
          ls -lah $GITHUB_WORKSPACE/AnyKernel3
        shell: bash

      - name: Upload Kernel Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ZIP_NAME }}  # Dynamic naming for artifact
          path: ${{ github.workspace }}/AnyKernel3/
