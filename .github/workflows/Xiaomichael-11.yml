name: Xiaomichael-11
on:
  workflow_dispatch:
    inputs:
      CPU:
        description: "CPUÂàÜÊîØ"
        required: true
        type: choice
        options:
          - 'sm8650'
          - 'sm8550'
          - 'sm8450'
          - 'sm8475'
          - 'sm7675'
        default: 'sm8650'
      FEIL:
        description: "ÊâãÊú∫ÂûãÂè∑"
        required: true
        type: choice
        options:
          - 'oneplus_12'
          - 'oneplus_ace3_pro'
          - 'oneplus_ace5'
          - 'oneplus_13r'
          - 'oneplus_pad2'
          - 'oneplus_pad_pro'
          - 'oneplus_11'
          - 'oneplus_12r'
          - 'oneplus_ace2_pro'
          - 'oneplus_ace3'
          - 'oneplus_open'
          - 'oneplus_10t'
          - 'oneplus_11r'
          - 'oneplus_ace2'
          - 'oneplus_ace_pro'
          - 'oneplus_10_pro'
          - 'oneplus_ace_3v'
        default: 'oneplus_12'
      CPUD:
        description: "Â§ÑÁêÜÂô®‰ª£Âè∑"
        required: true
        type: choice
        options:
          - 'pineapple'
          - 'kalama'
          - 'waipio'
        default: 'pineapple'
      ANDROID_VERSION:
        description: "ÂÜÖÊ†∏ÂÆâÂçìÁâàÊú¨"
        required: true
        type: choice
        options:
          - 'android14'
          - 'android13'
          - 'android12'
        default: 'android14'
      KERNEL_VERSION:
        description: "ÂÜÖÊ†∏ÁâàÊú¨"
        required: true
        type: choice
        options:
          - '6.1'
          - '5.15'
          - '5.10'
        default: '6.1'
      KPM:
       description: "ÊòØÂê¶ÂêØÁî®KPM"
       required: true
       type: choice
       options:
           - 'Open'
           - 'Close'
       default: 'Close'
      lz4kd:
       description: "ÊòØÂê¶ÂêØÁî®lz4kd(ÂÖ≥Èó≠Âàô6.1Á≥ªÂàóÂêØÁî®lz4 + zstd)"
       required: true
       type: choice
       options:
          - 'Open'
          - 'Close'
       default: 'Close'
      bbr:
       description: "ÊòØÂê¶ÂêØÁî®bbrÁÆóÊ≥ï(‰ºòÂåñ‰∏äË°åÊï∞ÊçÆ, ÂØπÊâãÊú∫Êó•Áî®Êó†Â§™Â§ßÊÑè‰πâÁîöËá≥ÂèØËÉΩË¥ü‰ºòÂåñ)"
       required: true
       type: choice
       options:
          - 'Open'
          - 'Close'
       default: 'Close'
         
jobs:
  build:
    name: For ${{ github.event.inputs.FEIL }} KPM ${{ github.event.inputs.KPM }} lz4kd ${{ github.event.inputs.lz4kd }} 
    runs-on: ubuntu-latest
    env:
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_HARDLINK: "true"
      CCACHE_MAXSIZE: 8G
    steps:
      - name: üöÄ Maximize build space (ÊúÄÂ§ßÂåñÊûÑÂª∫Á©∫Èó¥)
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 4096
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'

      #- name: üìä Check disk space (ÊûÑÂª∫ÂâçÁ©∫Èó¥Ê£ÄÊü•)
      #  run: df -h

      - name: ‚öôÔ∏è Set cache environment (ËÆæÁΩÆÁºìÂ≠òÁéØÂ¢É)
        run: |
          # ÂàõÂª∫ÊåâÊú∫ÂûãÈöîÁ¶ªÁöÑÁºìÂ≠òÁõÆÂΩï
          echo "CCACHE_DIR=$HOME/.ccache_${{ github.event.inputs.FEIL }}" >> $GITHUB_ENV
          mkdir -p "$HOME/.ccache_${{ github.event.inputs.FEIL }}"
          echo "ÁºìÂ≠òÁõÆÂΩïËÆæÁΩÆ‰∏∫: $HOME/.ccache_${{ github.event.inputs.FEIL }}"

      - name: üîê Configure Git (ËÆæÁΩÆ‰∏ãËΩΩË¥¶Êà∑)
        run: |
         git config --global user.name "bulid"
         git config --global user.email "2210077278@qq.com"

      - name: üì¶ Configure APT caching (ÈÖçÁΩÆAPTÁºìÂ≠ò)
        run: |
          APT_CACHE_DIR="$HOME/apt-cache"
          mkdir -p "$APT_CACHE_DIR"/{archives,lists/partial}
          echo "Dir::Cache \"$APT_CACHE_DIR\";" | sudo tee /etc/apt/apt.conf.d/90user-cache
          echo "Dir::Cache::archives \"$APT_CACHE_DIR/archives\";" | sudo tee -a /etc/apt/apt.conf.d/90user-cache
          echo "Dir::State::lists \"$APT_CACHE_DIR/lists\";" | sudo tee -a /etc/apt/apt.conf.d/90user-cache
          echo "Acquire::Check-Valid-Until \"false\";" | sudo tee -a /etc/apt/apt.conf.d/90user-cache
          echo "Acquire::Languages \"none\";" | sudo tee -a /etc/apt/apt.conf.d/90user-cache
          sudo chown -R $USER:$USER "$APT_CACHE_DIR"

      - name: üîÑ Cache APT packages (ÁºìÂ≠òAPTÂåÖ)
        uses: actions/cache@v3
        with:
          path: ${{ env.HOME }}/apt-cache
          key: ${{ runner.os }}-apt-${{ hashFiles('.github/workflows/Build SukiSU Ultra.yml') }}
          restore-keys: |
            ${{ runner.os }}-apt-

      - name: üì¶ Install dependencies (ÂÆâË£Ö‰æùËµñ)
        run: |
          sudo rm -f /var/lib/apt/lists/lock /var/lib/dpkg/lock
          APT_CACHE_DIR="$HOME/apt-cache"
          mkdir -p "$APT_CACHE_DIR/lists/partial"
          sudo apt -o Dir::Cache="$APT_CACHE_DIR" update -qq
          sudo DEBIAN_FRONTEND=noninteractive apt -o Dir::Cache="$APT_CACHE_DIR" install -yq --no-install-recommends \
            python3 git curl ccache libelf-dev \
            build-essential flex bison libssl-dev \
            libncurses-dev liblz4-tool zlib1g-dev \
            libxml2-utils rsync unzip
          echo "‚úÖ ‰æùËµñÂÆâË£ÖÂÆåÊàê"

      - name: üíæ Restore ccache (ÊÅ¢Â§ç ccache ÁºìÂ≠ò)
        uses: actions/cache@v3
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ccache-${{ runner.os }}-${{ github.ref }}-${{ github.event.inputs.FEIL }}
          restore-keys: |
            ccache-${{ runner.os }}-${{ github.event.inputs.FEIL }}-
            ccache-${{ runner.os }}-

      - name: ‚öôÔ∏è Init ccache (ÂàùÂßãÂåñccacheÁºìÂ≠ò)
        run: |
          INIT_FLAG="${{ env.CCACHE_DIR }}/.ccache_initialized"
          if command -v ccache >/dev/null 2>&1; then
            if [ ! -f "$INIT_FLAG" ]; then
              echo "ÂàùÂßãÂåñ ccache (${{ env.CCACHE_DIR }})..."
              mkdir -p "${{ env.CCACHE_DIR }}"
              ccache -M ${{ env.CCACHE_MAXSIZE }}
              touch "$INIT_FLAG"
              echo "ccache ÂàùÂßãÂåñÂÆåÊàê"
            else
              echo "ccache Â∑≤ÂàùÂßãÂåñÔºåË∑≥Ëøá"
            fi
          else
            echo "Êú™ÂÆâË£Ö ccacheÔºåË∑≥Ëøá"
          fi
          ccache -s

      - name: üì• Install repo tool (‰∏ãËΩΩrepoÂ∑•ÂÖ∑)
        run: |
         curl https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
         chmod a+x ~/repo
         sudo mv ~/repo /usr/local/bin/repo

      - name: ‚¨áÔ∏è Initialize repo and sync (ÂÖãÈöÜÂÜÖÊ†∏Ê∫êÁ†Å)
        run: |
         mkdir kernel_workspace && cd kernel_workspace
         repo init -u https://github.com/Xiaomichael/kernel_manifest.git -b refs/heads/oneplus/${{ github.event.inputs.CPU }} -m ${{ github.event.inputs.FEIL }}.xml --depth=1
         repo sync -c -j$(nproc --all) --no-tags --no-clone-bundle --force-sync
         rm kernel_platform/common/android/abi_gki_protected_exports_* || echo "No protected exports!"
         rm kernel_platform/msm-kernel/android/abi_gki_protected_exports_* || echo "No protected exports!"
         sed -i 's/ -dirty//g' kernel_platform/common/scripts/setlocalversion
         sed -i 's/ -dirty//g' kernel_platform/msm-kernel/scripts/setlocalversion
         sed -i 's/ -dirty//g' kernel_platform/external/dtc/scripts/setlocalversion
         sed -i '$i res=$(echo "$res" | sed '\''s/-dirty//g'\'')' kernel_platform/common/scripts/setlocalversion
         sed -i '$i res=$(echo "$res" | sed '\''s/-dirty//g'\'')' kernel_platform/msm-kernel/scripts/setlocalversion
         sed -i '$i res=$(echo "$res" | sed '\''s/-dirty//g'\'')' kernel_platform/external/dtc/scripts/setlocalversion
         sed -i '$s|echo "\$res"|echo "-oki-xiaoxiaow"|' kernel_platform/common/scripts/setlocalversion            
         sed -i '$s|echo "\$res"|echo "-oki-xiaoxiaow"|' kernel_platform/msm-kernel/scripts/setlocalversion
         sed -i '$s|echo "\$res"|echo "-oki-xiaoxiaow"|' kernel_platform/external/dtc/scripts/setlocalversion
          
      - name: ‚ö° Set up SukiSU Ultra (ÈÖçÁΩÆSukiSU Ultra)
        run: |
         mkdir -p kernel_workspace/kernel_platform
         cd kernel_workspace/kernel_platform
         curl -LSs "https://raw.githubusercontent.com/SukiSU-Ultra/SukiSU-Ultra/susfs-main/kernel/setup.sh" | bash -s susfs-main
         cd KernelSU
         curl -L -o setup.bin https://github.com/Xiaomichael/OnePlus-Actions/raw/Build/script/setup.bin
         chmod +x setup.bin
         if [ ! -f "kernel/Makefile" ]; then
           echo "::error ::kernel/Makefile"
           ls -la
           exit 1
         fi
         ./setup.bin
          
      - name: üîß Set up SUSFS (ÈÖçÁΩÆ SUSFS)
        run: |
          cd kernel_workspace
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}
          git clone https://github.com/Xiaomichael/kernel_patches.git
          git clone https://github.com/ShirkNeko/SukiSU_patch.git
          cd kernel_platform
          # Copy SUSFS patches
          cp ../susfs4ksu/kernel_patches/50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch ./common/
          cp ../kernel_patches/next/syscall_hooks.patch ./common/
          cp ../susfs4ksu/kernel_patches/fs/* ./common/fs/
          cp ../susfs4ksu/kernel_patches/include/linux/* ./common/include/linux/
          if [ "${{ github.event.inputs.lz4kd }}" = "Close" ] && [ "${{ github.event.inputs.KERNEL_VERSION }}" = "6.1" ]; then
            cp ../kernel_patches/zram/001-lz4.patch ./common/
            cp ../kernel_patches/zram/lz4armv8.S ./common/lib
            cp ../kernel_patches/zram/002-zstd.patch ./common/
          fi
          if [ "${{ github.event.inputs.lz4kd }}" == "Open" ]; then
            # Copy lz4k from ShirkNeko
            cp -r ../SukiSU_patch/other/zram/lz4k/include/linux/* ./common/include/linux
            cp -r ../SukiSU_patch/other/zram/lz4k/lib/* ./common/lib
            cp -r ../SukiSU_patch/other/zram/lz4k/crypto/* ./common/crypto
            cp -r ../SukiSU_patch/other/zram/lz4k_oplus ./common/lib/
          fi
          
          cd ./common
          patch -p1 < 50_add_susfs_in_gki-${{ github.event.inputs.ANDROID_VERSION }}-${{ github.event.inputs.KERNEL_VERSION }}.patch || true
          cp ../../kernel_patches/69_hide_stuff.patch ./
          patch -p1 -F 3 < 69_hide_stuff.patch
          patch -p1 -F 3 < syscall_hooks.patch
          if [ "${{ github.event.inputs.lz4kd }}" = "Close" ] && [ "${{ github.event.inputs.KERNEL_VERSION }}" = "6.1" ]; then
            git apply -p1 < 001-lz4.patch || true
            patch -p1 < 002-zstd.patch || true
          fi
          if [ "${{ github.event.inputs.lz4kd }}" == "Open" ]; then
            cp ../../SukiSU_patch/other/zram/zram_patch/${{ github.event.inputs.KERNEL_VERSION }}/lz4kd.patch ./
            patch -p1 -F 3 < lz4kd.patch || true
            cp ../../SukiSU_patch/other/zram/zram_patch/${{ github.event.inputs.KERNEL_VERSION }}/lz4k_oplus.patch ./
            patch -p1 -F 3 < lz4k_oplus.patch || true
          fi

      - name: ‚öôÔ∏è Apply new hook & Add configuration (ÈÖçÁΩÆÂÜÖÊ†∏ÈÄâÈ°π)
        run: |
          cd kernel_workspace/kernel_platform
          # Add KSU configuration settings
          echo "CONFIG_KSU=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KPM=y" >> ./common/arch/arm64/configs/gki_defconfig
          # Add VFS configuration settings
          echo "CONFIG_KSU_SUSFS_SUS_SU=n" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_MANUAL_HOOK=y" >> ./common/arch/arm64/configs/gki_defconfig      
          # Add SUSFS configuration settings
          echo "CONFIG_KSU_SUSFS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_PATH=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_KSTAT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_OVERLAYFS=n" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_TRY_UMOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_UNAME=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_ENABLE_LOG=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_OPEN_REDIRECT=y" >> ./common/arch/arm64/configs/gki_defconfig
          if [ "${{ github.event.inputs.bbr }}" == "Open" ]; then
            # Add BBR
            echo "CONFIG_TCP_CONG_ADVANCED=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_TCP_CONG_BBR=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_NET_SCH_FQ=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_TCP_CONG_BIC=n" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_TCP_CONG_WESTWOOD=n" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_TCP_CONG_HTCP=n" >> ./common/arch/arm64/configs/gki_defconfig
            # Add USB Configs
            echo "CONFIG_USB_CONFIGFS_OBEX=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_USB_CONFIGFS_ECM_SUBSET=y" >> ./common/arch/arm64/configs/gki_defconfig
          fi
          if [ "${{ github.event.inputs.lz4kd }}" == "Open" ]; then
            # Add lz4kd
            echo "CONFIG_CRYPTO_LZ4KD=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_CRYPTO_LZ4K_OPLUS=y" >> ./common/arch/arm64/configs/gki_defconfig
            echo "CONFIG_ZRAM_WRITEBACK=y" >> ./common/arch/arm64/configs/gki_defconfig
          fi
          # Remove check_defconfig
          sed -i 's/check_defconfig//' ./common/build.config.gki
    
      - name: üî® Build Kernel (ÊûÑÂª∫ÂÜÖÊ†∏)
        run: |
          if [ "${{ github.event.inputs.KERNEL_VERSION }}" == "6.1" ]; then
            export KBUILD_BUILD_TIMESTAMP="Wed May 29 07:25:40 UTC 2025"
            export PATH="$GITHUB_WORKSPACE/kernel_workspace/kernel_platform/prebuilts/clang/host/linux-x86/clang-r487747c/bin:$PATH"
            export PATH="/usr/lib/ccache:$PATH"
            sudo apt install libelf-dev
            cd kernel_workspace/kernel_platform/common
            make -j$(nproc --all) LLVM=1 ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- CC="ccache clang" RUSTC=../../prebuilts/rust/linux-x86/1.73.0b/bin/rustc PAHOLE=../../prebuilts/kernel-build-tools/linux-x86/bin/pahole LD=ld.lld HOSTLD=ld.lld O=out KCFLAGS+=-O2 CONFIG_LTO_CLANG=y CONFIG_LTO_CLANG_THIN=y CONFIG_LTO_CLANG_FULL=n CONFIG_LTO_NONE=n gki_defconfig all
          else
            cd kernel_workspace
            LTO=thin ./kernel_platform/oplus/build/oplus_build_kernel.sh ${{ github.event.inputs.CPUD }} gki
          fi
          # ÊòæÁ§∫ccacheÁªüËÆ°‰ø°ÊÅØ
          ccache -s
          
      - name: üì¶ Package kernel to AnyKernel3 (ÊâìÂåÖÂÜÖÊ†∏Âà∞ AnyKernel3)
        run: |
          git clone https://github.com/Xiaomichael/AnyKernel3 --depth=1
          rm -rf ./AnyKernel3/.git
          dir1="kernel_workspace/kernel_platform/out/msm-kernel-${{ github.event.inputs.CPUD }}-gki/dist/"
          dir2="kernel_workspace/kernel_platform/bazel-out/k8-fastbuild/bin/msm-kernel/${{ github.event.inputs.CPUD }}_gki_kbuild_mixed_tree/"
          dir3="kernel_workspace/kernel_platform/out/msm-${{ github.event.inputs.CPUD }}-${{ github.event.inputs.CPUD }}-gki/dist/"
          dir4="kernel_workspace/kernel_platform/out/msm-kernel-${{ github.event.inputs.CPUD }}-gki/gki_kernel/common/arch/arm64/boot/"
          dir5="kernel_workspace/kernel_platform/out/msm-${{ github.event.inputs.CPUD }}-${{ github.event.inputs.CPUD }}-gki/gki_kernel/common/arch/arm64/boot/"
          dir6="kernel_workspace/kernel_platform/common/out/arch/arm64/boot/"
          target1="./AnyKernel3/"
          target2="./kernel_workspace/kernel"

          if find "$dir1" -name "Image" | grep -q "Image"; then
            image_path="$dir1"Image
          elif find "$dir2" -name "Image" | grep -q "Image"; then
            image_path="$dir2"Image
          elif find "$dir3" -name "Image" | grep -q "Image"; then
            image_path="$dir3"Image
          elif find "$dir4" -name "Image" | grep -q "Image"; then
            image_path="$dir4"Image
          elif find "$dir5" -name "Image" | grep -q "Image"; then
            image_path="$dir5"Image
          elif find "$dir6" -name "Image" | grep -q "Image"; then
            image_path="$dir6"Image
          else
            image_path=$(find "./kernel_workspace/kernel_platform/common/out/" -name "Image" | head -n 1)
          fi

          if [ -n "$image_path" ] && [ -f "$image_path" ]; then
            mkdir -p "$dir1"
            if [ "$(realpath "$image_path")" != "$(realpath "$dir1"Image)" ]; then
              cp "$image_path" "$dir1"
            else
              echo "Ê∫êÊñá‰ª∂‰∏éÁõÆÊ†áÁõ∏ÂêåÔºåË∑≥ËøáÂ§çÂà∂"
            fi
            cp "$dir1"Image ./AnyKernel3/Image
          else
            echo "Êú™ÊâæÂà∞ Image Êñá‰ª∂ÔºåÊûÑÂª∫ÂèØËÉΩÂ§±Ë¥•"
            exit 1
          fi
         
      - name: üß© KPM Patching Image Files (KPM ‰øÆË°• Image Êñá‰ª∂)
        if: ${{ github.event.inputs.KPM == 'Open' }}
        run: |
          cd kernel_workspace/kernel_platform/out/msm-kernel-${{ github.event.inputs.CPUD }}-gki/dist
          curl -LO https://github.com/SukiSU-Ultra/SukiSU_KernelPatch_patch/releases/download/0.12.0/patch_linux
          chmod +x patch_linux
          ./patch_linux
          rm -f Image
          mv oImage Image
          cp Image $GITHUB_WORKSPACE/AnyKernel3/Image
          cp Image $GITHUB_WORKSPACE/kernel_workspace/kernel
         
      - name: üì§ Upload AnyKernel3 with lz4kd (‰∏ä‰º† AnyKernel3)
        if: ${{ github.event.inputs.lz4kd == 'Open' }}
        uses: actions/upload-artifact@v4
        with:
         name: AnyKernel3_SukiSU_Ultra_lz4kd_${{ env.KSUVER }}_${{ github.event.inputs.FEIL }}
         path: ./AnyKernel3/*

      - name: üì§ Upload AnyKernel3 (‰∏ä‰º† AnyKernel3)
        if: ${{ github.event.inputs.lz4kd != 'Open' && github.event.inputs.KERNEL_VERSION != '6.1' }}
        uses: actions/upload-artifact@v4
        with:
         name: AnyKernel3_SukiSU_Ultra_${{ env.KSUVER }}_${{ github.event.inputs.FEIL }}
         path: ./AnyKernel3/*
         
      - name: üìù Find zram.ko & crypto_zstdn.ko (Êü•Êâæ zram.ko & crypto_zstdn.ko)
        if: ${{ github.event.inputs.lz4kd == 'Open' }}
        run: |
          find -name zram.ko
          find -name crypto_zstdn.ko
          
      - name: üì§ Upload zram.ko (‰∏ä‰º† zram.ko)
        if: ${{ github.event.inputs.lz4kd == 'Open' }}
        uses: actions/upload-artifact@v4
        with:
          name: zram.ko
          path: ./kernel_workspace/kernel_platform/common/out/drivers/block/zram/zram.ko
